from module configure load config
from module encoding load fg, bg

def arr( master1 : ndarray, master2 :  ndarray none = None, t : string none = None):
	y = config.bold()+fg(255, 255, 0)
	w = config.bold()+fg(255,255,255)
	g = config.bold()+fg(0,255,0)
	r = config.bold()+fg(255,0,0)
	re = config.reset()
	line = GetLine()
	b = config.bold() + fg(0,0,255)
	
	if t == None:
		return maxter1
	else:
		if t in ["T", "*", "+", "-", "/", "%"] : 
			if t == "T":
				if master1.ndim():
					__scan__ * "table", [master1, None, t]
				else:
					__show__ * "{g}ValueError : {r}{master1} {w} cannot be {y} NULL {w}in {b}arr( ) / {r}from array( ) {re}"		
				end:
			else:
				if master2 != None:
					if t == '*' : 
						if master1.ndim()[1] = master2.ndim()[0]:
							__scan__ * "table", [master1, master2, t]
						else:
							__show__ * "{g}ValueError : {r}dimension Error {y}{master1.ndim()} {w} and {g}{master2.ndim() {w}in {b}arr( ) / {r}from array( ) {re}"		
						end:
					else:
						if master1.ndim()[0] = master2.ndim()[0]:
							__scan__ * "table", [master1, master2, t]
					end:
				else:
					__show__ * "{g}ValueError : {r}master2 {w} cannot be {y} NULL {w}in {b}arr( ) / {r}from array( ) {re}"		
				end:
			end:
		else:
			name = ["T", "*", "+", "-", "/", "%"]
			__show__ * "{g}ValueError : {r}t {w} is not in {y}{name}. {w}line : {y}{line} {w}in {b}arr( ) / {r}from array( ){re}"
		end:
	end:
end:
